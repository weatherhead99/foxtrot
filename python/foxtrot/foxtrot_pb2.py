# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: foxtrot.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='foxtrot.proto',
  package='foxtrot',
  syntax='proto3',
  serialized_pb=_b('\n\rfoxtrot.proto\x12\x07\x66oxtrot\"\x07\n\x05\x65mpty\":\n\terrstatus\x12 \n\x02tp\x18\x01 \x01(\x0e\x32\x14.foxtrot.error_types\x12\x0b\n\x03msg\x18\x02 \x01(\t\"\xe0\x01\n\rdevcapability\x12%\n\x02tp\x18\x01 \x01(\x0e\x32\x19.foxtrot.capability_types\x12\x0f\n\x07\x63\x61pname\x18\x02 \x01(\t\x12\x10\n\x08\x61rgnames\x18\x03 \x03(\t\x12&\n\x08\x61rgtypes\x18\x04 \x03(\x0e\x32\x14.foxtrot.value_types\x12%\n\x05rettp\x18\x05 \x01(\x0e\x32\x14.foxtrot.value_typesH\x00\x12,\n\x08vecrettp\x18\x06 \x01(\x0e\x32\x18.foxtrot.byte_data_typesH\x00\x42\x08\n\x06return\"g\n\x0b\x64\x65vdescribe\x12\r\n\x05\x64\x65vid\x18\x01 \x01(\r\x12\x0f\n\x07\x64\x65vtype\x18\x02 \x01(\t\x12\x12\n\ndevcomment\x18\x03 \x01(\t\x12$\n\x04\x63\x61ps\x18\x04 \x03(\x0b\x32\x16.foxtrot.devcapability\"\xae\x01\n\x0cservdescribe\x12\x13\n\x0bservcomment\x18\x01 \x01(\t\x12>\n\rdevs_attached\x18\x02 \x03(\x0b\x32\'.foxtrot.servdescribe.DevsAttachedEntry\x1aI\n\x11\x44\x65vsAttachedEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.foxtrot.devdescribe:\x02\x38\x01\"y\n\x13\x63\x61pability_argument\x12\x10\n\x08position\x18\x01 \x01(\r\x12\x10\n\x06\x64\x62larg\x18\x02 \x01(\x01H\x00\x12\x10\n\x06intarg\x18\x03 \x01(\x11H\x00\x12\x11\n\x07\x62oolarg\x18\x04 \x01(\x08H\x00\x12\x10\n\x06strarg\x18\x05 \x01(\tH\x00\x42\x07\n\x05value\"o\n\x12\x63\x61pability_request\x12\r\n\x05msgid\x18\x01 \x01(\r\x12\r\n\x05\x64\x65vid\x18\x02 \x01(\r\x12\x0f\n\x07\x63\x61pname\x18\x03 \x01(\t\x12*\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x1c.foxtrot.capability_argument\"\xbb\x01\n\x13\x63\x61pability_response\x12\r\n\x05msgid\x18\x01 \x01(\r\x12\r\n\x05\x64\x65vid\x18\x02 \x01(\r\x12\x0f\n\x07\x63\x61pname\x18\x03 \x01(\t\x12\x10\n\x06\x64\x62lret\x18\x04 \x01(\x01H\x00\x12\x10\n\x06intret\x18\x05 \x01(\x11H\x00\x12\x11\n\x07\x62oolret\x18\x06 \x01(\x08H\x00\x12\x13\n\tstringret\x18\x07 \x01(\tH\x00\x12\x1f\n\x03\x65rr\x18\x08 \x01(\x0b\x32\x12.foxtrot.errstatusB\x08\n\x06return\"\xa0\x01\n\ttelemetry\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06tstamp\x18\x02 \x01(\x04\x12\x10\n\x06\x64\x62lret\x18\x03 \x01(\x01H\x00\x12\x10\n\x06intret\x18\x04 \x01(\x11H\x00\x12\x11\n\x07\x62oolret\x18\x05 \x01(\x08H\x00\x12\x13\n\tstringret\x18\x06 \x01(\tH\x00\x12\x1f\n\x03\x65rr\x18\x07 \x01(\x0b\x32\x12.foxtrot.errstatusB\x08\n\x06return\"}\n\rchunk_request\x12\r\n\x05msgid\x18\x01 \x01(\r\x12\r\n\x05\x64\x65vid\x18\x02 \x01(\r\x12\x0f\n\x07\x63\x61pname\x18\x03 \x01(\t\x12*\n\x04\x61rgs\x18\x04 \x03(\x0b\x32\x1c.foxtrot.capability_argument\x12\x11\n\tchunksize\x18\x06 \x01(\r\"\x90\x01\n\tdatachunk\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\x12\r\n\x05msgid\x18\x02 \x01(\r\x12\r\n\x05\x64\x65vid\x18\x03 \x01(\r\x12\x0f\n\x07\x63\x61pname\x18\x04 \x01(\t\x12\x1f\n\x03\x65rr\x18\x06 \x01(\x0b\x32\x12.foxtrot.errstatus\x12%\n\x03\x64tp\x18\x07 \x01(\x0e\x32\x18.foxtrot.byte_data_types*S\n\x10\x63\x61pability_types\x12\x12\n\x0eVALUE_READONLY\x10\x00\x12\x13\n\x0fVALUE_READWRITE\x10\x01\x12\n\n\x06\x41\x43TION\x10\x02\x12\n\n\x06STREAM\x10\x03*P\n\x0bvalue_types\x12\t\n\x05\x46LOAT\x10\x00\x12\x07\n\x03INT\x10\x01\x12\x08\n\x04\x42OOL\x10\x02\x12\n\n\x06STRING\x10\x03\x12\r\n\tBYTE_DATA\x10\x04\x12\x08\n\x04VOID\x10\x05*u\n\x0f\x62yte_data_types\x12\t\n\x05UCHAR\x10\x00\x12\n\n\x06USHORT\x10\x01\x12\x08\n\x04UINT\x10\x02\x12\t\n\x05ULONG\x10\x03\x12\t\n\x05SHORT\x10\x04\x12\x08\n\x04IINT\x10\x05\x12\x08\n\x04LONG\x10\x06\x12\n\n\x06\x42\x46LOAT\x10\x07\x12\x0b\n\x07\x42\x44OUBLE\x10\x08*a\n\x0b\x65rror_types\x12\t\n\x05\x45rror\x10\x00\x12\x0f\n\x0b\x44\x65viceError\x10\x01\x12\x11\n\rProtocolError\x10\x02\x12\x10\n\x0cout_of_range\x10\x03\x12\x11\n\runknown_error\x10\x04\x32\xce\x01\n\texptserve\x12M\n\x10InvokeCapability\x12\x1b.foxtrot.capability_request\x1a\x1c.foxtrot.capability_response\x12\x37\n\x0e\x44\x65scribeServer\x12\x0e.foxtrot.empty\x1a\x15.foxtrot.servdescribe\x12\x39\n\tFetchData\x12\x16.foxtrot.chunk_request\x1a\x12.foxtrot.datachunk0\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_CAPABILITY_TYPES = _descriptor.EnumDescriptor(
  name='capability_types',
  full_name='foxtrot.capability_types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VALUE_READONLY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VALUE_READWRITE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTION', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STREAM', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1467,
  serialized_end=1550,
)
_sym_db.RegisterEnumDescriptor(_CAPABILITY_TYPES)

capability_types = enum_type_wrapper.EnumTypeWrapper(_CAPABILITY_TYPES)
_VALUE_TYPES = _descriptor.EnumDescriptor(
  name='value_types',
  full_name='foxtrot.value_types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BYTE_DATA', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOID', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1552,
  serialized_end=1632,
)
_sym_db.RegisterEnumDescriptor(_VALUE_TYPES)

value_types = enum_type_wrapper.EnumTypeWrapper(_VALUE_TYPES)
_BYTE_DATA_TYPES = _descriptor.EnumDescriptor(
  name='byte_data_types',
  full_name='foxtrot.byte_data_types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UCHAR', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='USHORT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ULONG', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHORT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IINT', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LONG', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BFLOAT', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BDOUBLE', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1634,
  serialized_end=1751,
)
_sym_db.RegisterEnumDescriptor(_BYTE_DATA_TYPES)

byte_data_types = enum_type_wrapper.EnumTypeWrapper(_BYTE_DATA_TYPES)
_ERROR_TYPES = _descriptor.EnumDescriptor(
  name='error_types',
  full_name='foxtrot.error_types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Error', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DeviceError', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ProtocolError', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='out_of_range', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='unknown_error', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1753,
  serialized_end=1850,
)
_sym_db.RegisterEnumDescriptor(_ERROR_TYPES)

error_types = enum_type_wrapper.EnumTypeWrapper(_ERROR_TYPES)
VALUE_READONLY = 0
VALUE_READWRITE = 1
ACTION = 2
STREAM = 3
FLOAT = 0
INT = 1
BOOL = 2
STRING = 3
BYTE_DATA = 4
VOID = 5
UCHAR = 0
USHORT = 1
UINT = 2
ULONG = 3
SHORT = 4
IINT = 5
LONG = 6
BFLOAT = 7
BDOUBLE = 8
Error = 0
DeviceError = 1
ProtocolError = 2
out_of_range = 3
unknown_error = 4



_EMPTY = _descriptor.Descriptor(
  name='empty',
  full_name='foxtrot.empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=33,
)


_ERRSTATUS = _descriptor.Descriptor(
  name='errstatus',
  full_name='foxtrot.errstatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tp', full_name='foxtrot.errstatus.tp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='foxtrot.errstatus.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=93,
)


_DEVCAPABILITY = _descriptor.Descriptor(
  name='devcapability',
  full_name='foxtrot.devcapability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tp', full_name='foxtrot.devcapability.tp', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capname', full_name='foxtrot.devcapability.capname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='argnames', full_name='foxtrot.devcapability.argnames', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='argtypes', full_name='foxtrot.devcapability.argtypes', index=3,
      number=4, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rettp', full_name='foxtrot.devcapability.rettp', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vecrettp', full_name='foxtrot.devcapability.vecrettp', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='return', full_name='foxtrot.devcapability.return',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=96,
  serialized_end=320,
)


_DEVDESCRIBE = _descriptor.Descriptor(
  name='devdescribe',
  full_name='foxtrot.devdescribe',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devid', full_name='foxtrot.devdescribe.devid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devtype', full_name='foxtrot.devdescribe.devtype', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devcomment', full_name='foxtrot.devdescribe.devcomment', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='caps', full_name='foxtrot.devdescribe.caps', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=322,
  serialized_end=425,
)


_SERVDESCRIBE_DEVSATTACHEDENTRY = _descriptor.Descriptor(
  name='DevsAttachedEntry',
  full_name='foxtrot.servdescribe.DevsAttachedEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='foxtrot.servdescribe.DevsAttachedEntry.key', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='foxtrot.servdescribe.DevsAttachedEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=529,
  serialized_end=602,
)

_SERVDESCRIBE = _descriptor.Descriptor(
  name='servdescribe',
  full_name='foxtrot.servdescribe',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='servcomment', full_name='foxtrot.servdescribe.servcomment', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devs_attached', full_name='foxtrot.servdescribe.devs_attached', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SERVDESCRIBE_DEVSATTACHEDENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=428,
  serialized_end=602,
)


_CAPABILITY_ARGUMENT = _descriptor.Descriptor(
  name='capability_argument',
  full_name='foxtrot.capability_argument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='position', full_name='foxtrot.capability_argument.position', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dblarg', full_name='foxtrot.capability_argument.dblarg', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intarg', full_name='foxtrot.capability_argument.intarg', index=2,
      number=3, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolarg', full_name='foxtrot.capability_argument.boolarg', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strarg', full_name='foxtrot.capability_argument.strarg', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='foxtrot.capability_argument.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=604,
  serialized_end=725,
)


_CAPABILITY_REQUEST = _descriptor.Descriptor(
  name='capability_request',
  full_name='foxtrot.capability_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msgid', full_name='foxtrot.capability_request.msgid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devid', full_name='foxtrot.capability_request.devid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capname', full_name='foxtrot.capability_request.capname', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='args', full_name='foxtrot.capability_request.args', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=727,
  serialized_end=838,
)


_CAPABILITY_RESPONSE = _descriptor.Descriptor(
  name='capability_response',
  full_name='foxtrot.capability_response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msgid', full_name='foxtrot.capability_response.msgid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devid', full_name='foxtrot.capability_response.devid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capname', full_name='foxtrot.capability_response.capname', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dblret', full_name='foxtrot.capability_response.dblret', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intret', full_name='foxtrot.capability_response.intret', index=4,
      number=5, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolret', full_name='foxtrot.capability_response.boolret', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stringret', full_name='foxtrot.capability_response.stringret', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='foxtrot.capability_response.err', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='return', full_name='foxtrot.capability_response.return',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=841,
  serialized_end=1028,
)


_TELEMETRY = _descriptor.Descriptor(
  name='telemetry',
  full_name='foxtrot.telemetry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='foxtrot.telemetry.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tstamp', full_name='foxtrot.telemetry.tstamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dblret', full_name='foxtrot.telemetry.dblret', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='intret', full_name='foxtrot.telemetry.intret', index=3,
      number=4, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='boolret', full_name='foxtrot.telemetry.boolret', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stringret', full_name='foxtrot.telemetry.stringret', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='foxtrot.telemetry.err', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='return', full_name='foxtrot.telemetry.return',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1031,
  serialized_end=1191,
)


_CHUNK_REQUEST = _descriptor.Descriptor(
  name='chunk_request',
  full_name='foxtrot.chunk_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msgid', full_name='foxtrot.chunk_request.msgid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devid', full_name='foxtrot.chunk_request.devid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capname', full_name='foxtrot.chunk_request.capname', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='args', full_name='foxtrot.chunk_request.args', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chunksize', full_name='foxtrot.chunk_request.chunksize', index=4,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1193,
  serialized_end=1318,
)


_DATACHUNK = _descriptor.Descriptor(
  name='datachunk',
  full_name='foxtrot.datachunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='foxtrot.datachunk.data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msgid', full_name='foxtrot.datachunk.msgid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='devid', full_name='foxtrot.datachunk.devid', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capname', full_name='foxtrot.datachunk.capname', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='err', full_name='foxtrot.datachunk.err', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dtp', full_name='foxtrot.datachunk.dtp', index=5,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1321,
  serialized_end=1465,
)

_ERRSTATUS.fields_by_name['tp'].enum_type = _ERROR_TYPES
_DEVCAPABILITY.fields_by_name['tp'].enum_type = _CAPABILITY_TYPES
_DEVCAPABILITY.fields_by_name['argtypes'].enum_type = _VALUE_TYPES
_DEVCAPABILITY.fields_by_name['rettp'].enum_type = _VALUE_TYPES
_DEVCAPABILITY.fields_by_name['vecrettp'].enum_type = _BYTE_DATA_TYPES
_DEVCAPABILITY.oneofs_by_name['return'].fields.append(
  _DEVCAPABILITY.fields_by_name['rettp'])
_DEVCAPABILITY.fields_by_name['rettp'].containing_oneof = _DEVCAPABILITY.oneofs_by_name['return']
_DEVCAPABILITY.oneofs_by_name['return'].fields.append(
  _DEVCAPABILITY.fields_by_name['vecrettp'])
_DEVCAPABILITY.fields_by_name['vecrettp'].containing_oneof = _DEVCAPABILITY.oneofs_by_name['return']
_DEVDESCRIBE.fields_by_name['caps'].message_type = _DEVCAPABILITY
_SERVDESCRIBE_DEVSATTACHEDENTRY.fields_by_name['value'].message_type = _DEVDESCRIBE
_SERVDESCRIBE_DEVSATTACHEDENTRY.containing_type = _SERVDESCRIBE
_SERVDESCRIBE.fields_by_name['devs_attached'].message_type = _SERVDESCRIBE_DEVSATTACHEDENTRY
_CAPABILITY_ARGUMENT.oneofs_by_name['value'].fields.append(
  _CAPABILITY_ARGUMENT.fields_by_name['dblarg'])
_CAPABILITY_ARGUMENT.fields_by_name['dblarg'].containing_oneof = _CAPABILITY_ARGUMENT.oneofs_by_name['value']
_CAPABILITY_ARGUMENT.oneofs_by_name['value'].fields.append(
  _CAPABILITY_ARGUMENT.fields_by_name['intarg'])
_CAPABILITY_ARGUMENT.fields_by_name['intarg'].containing_oneof = _CAPABILITY_ARGUMENT.oneofs_by_name['value']
_CAPABILITY_ARGUMENT.oneofs_by_name['value'].fields.append(
  _CAPABILITY_ARGUMENT.fields_by_name['boolarg'])
_CAPABILITY_ARGUMENT.fields_by_name['boolarg'].containing_oneof = _CAPABILITY_ARGUMENT.oneofs_by_name['value']
_CAPABILITY_ARGUMENT.oneofs_by_name['value'].fields.append(
  _CAPABILITY_ARGUMENT.fields_by_name['strarg'])
_CAPABILITY_ARGUMENT.fields_by_name['strarg'].containing_oneof = _CAPABILITY_ARGUMENT.oneofs_by_name['value']
_CAPABILITY_REQUEST.fields_by_name['args'].message_type = _CAPABILITY_ARGUMENT
_CAPABILITY_RESPONSE.fields_by_name['err'].message_type = _ERRSTATUS
_CAPABILITY_RESPONSE.oneofs_by_name['return'].fields.append(
  _CAPABILITY_RESPONSE.fields_by_name['dblret'])
_CAPABILITY_RESPONSE.fields_by_name['dblret'].containing_oneof = _CAPABILITY_RESPONSE.oneofs_by_name['return']
_CAPABILITY_RESPONSE.oneofs_by_name['return'].fields.append(
  _CAPABILITY_RESPONSE.fields_by_name['intret'])
_CAPABILITY_RESPONSE.fields_by_name['intret'].containing_oneof = _CAPABILITY_RESPONSE.oneofs_by_name['return']
_CAPABILITY_RESPONSE.oneofs_by_name['return'].fields.append(
  _CAPABILITY_RESPONSE.fields_by_name['boolret'])
_CAPABILITY_RESPONSE.fields_by_name['boolret'].containing_oneof = _CAPABILITY_RESPONSE.oneofs_by_name['return']
_CAPABILITY_RESPONSE.oneofs_by_name['return'].fields.append(
  _CAPABILITY_RESPONSE.fields_by_name['stringret'])
_CAPABILITY_RESPONSE.fields_by_name['stringret'].containing_oneof = _CAPABILITY_RESPONSE.oneofs_by_name['return']
_TELEMETRY.fields_by_name['err'].message_type = _ERRSTATUS
_TELEMETRY.oneofs_by_name['return'].fields.append(
  _TELEMETRY.fields_by_name['dblret'])
_TELEMETRY.fields_by_name['dblret'].containing_oneof = _TELEMETRY.oneofs_by_name['return']
_TELEMETRY.oneofs_by_name['return'].fields.append(
  _TELEMETRY.fields_by_name['intret'])
_TELEMETRY.fields_by_name['intret'].containing_oneof = _TELEMETRY.oneofs_by_name['return']
_TELEMETRY.oneofs_by_name['return'].fields.append(
  _TELEMETRY.fields_by_name['boolret'])
_TELEMETRY.fields_by_name['boolret'].containing_oneof = _TELEMETRY.oneofs_by_name['return']
_TELEMETRY.oneofs_by_name['return'].fields.append(
  _TELEMETRY.fields_by_name['stringret'])
_TELEMETRY.fields_by_name['stringret'].containing_oneof = _TELEMETRY.oneofs_by_name['return']
_CHUNK_REQUEST.fields_by_name['args'].message_type = _CAPABILITY_ARGUMENT
_DATACHUNK.fields_by_name['err'].message_type = _ERRSTATUS
_DATACHUNK.fields_by_name['dtp'].enum_type = _BYTE_DATA_TYPES
DESCRIPTOR.message_types_by_name['empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['errstatus'] = _ERRSTATUS
DESCRIPTOR.message_types_by_name['devcapability'] = _DEVCAPABILITY
DESCRIPTOR.message_types_by_name['devdescribe'] = _DEVDESCRIBE
DESCRIPTOR.message_types_by_name['servdescribe'] = _SERVDESCRIBE
DESCRIPTOR.message_types_by_name['capability_argument'] = _CAPABILITY_ARGUMENT
DESCRIPTOR.message_types_by_name['capability_request'] = _CAPABILITY_REQUEST
DESCRIPTOR.message_types_by_name['capability_response'] = _CAPABILITY_RESPONSE
DESCRIPTOR.message_types_by_name['telemetry'] = _TELEMETRY
DESCRIPTOR.message_types_by_name['chunk_request'] = _CHUNK_REQUEST
DESCRIPTOR.message_types_by_name['datachunk'] = _DATACHUNK
DESCRIPTOR.enum_types_by_name['capability_types'] = _CAPABILITY_TYPES
DESCRIPTOR.enum_types_by_name['value_types'] = _VALUE_TYPES
DESCRIPTOR.enum_types_by_name['byte_data_types'] = _BYTE_DATA_TYPES
DESCRIPTOR.enum_types_by_name['error_types'] = _ERROR_TYPES

empty = _reflection.GeneratedProtocolMessageType('empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.empty)
  ))
_sym_db.RegisterMessage(empty)

errstatus = _reflection.GeneratedProtocolMessageType('errstatus', (_message.Message,), dict(
  DESCRIPTOR = _ERRSTATUS,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.errstatus)
  ))
_sym_db.RegisterMessage(errstatus)

devcapability = _reflection.GeneratedProtocolMessageType('devcapability', (_message.Message,), dict(
  DESCRIPTOR = _DEVCAPABILITY,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.devcapability)
  ))
_sym_db.RegisterMessage(devcapability)

devdescribe = _reflection.GeneratedProtocolMessageType('devdescribe', (_message.Message,), dict(
  DESCRIPTOR = _DEVDESCRIBE,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.devdescribe)
  ))
_sym_db.RegisterMessage(devdescribe)

servdescribe = _reflection.GeneratedProtocolMessageType('servdescribe', (_message.Message,), dict(

  DevsAttachedEntry = _reflection.GeneratedProtocolMessageType('DevsAttachedEntry', (_message.Message,), dict(
    DESCRIPTOR = _SERVDESCRIBE_DEVSATTACHEDENTRY,
    __module__ = 'foxtrot_pb2'
    # @@protoc_insertion_point(class_scope:foxtrot.servdescribe.DevsAttachedEntry)
    ))
  ,
  DESCRIPTOR = _SERVDESCRIBE,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.servdescribe)
  ))
_sym_db.RegisterMessage(servdescribe)
_sym_db.RegisterMessage(servdescribe.DevsAttachedEntry)

capability_argument = _reflection.GeneratedProtocolMessageType('capability_argument', (_message.Message,), dict(
  DESCRIPTOR = _CAPABILITY_ARGUMENT,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.capability_argument)
  ))
_sym_db.RegisterMessage(capability_argument)

capability_request = _reflection.GeneratedProtocolMessageType('capability_request', (_message.Message,), dict(
  DESCRIPTOR = _CAPABILITY_REQUEST,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.capability_request)
  ))
_sym_db.RegisterMessage(capability_request)

capability_response = _reflection.GeneratedProtocolMessageType('capability_response', (_message.Message,), dict(
  DESCRIPTOR = _CAPABILITY_RESPONSE,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.capability_response)
  ))
_sym_db.RegisterMessage(capability_response)

telemetry = _reflection.GeneratedProtocolMessageType('telemetry', (_message.Message,), dict(
  DESCRIPTOR = _TELEMETRY,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.telemetry)
  ))
_sym_db.RegisterMessage(telemetry)

chunk_request = _reflection.GeneratedProtocolMessageType('chunk_request', (_message.Message,), dict(
  DESCRIPTOR = _CHUNK_REQUEST,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.chunk_request)
  ))
_sym_db.RegisterMessage(chunk_request)

datachunk = _reflection.GeneratedProtocolMessageType('datachunk', (_message.Message,), dict(
  DESCRIPTOR = _DATACHUNK,
  __module__ = 'foxtrot_pb2'
  # @@protoc_insertion_point(class_scope:foxtrot.datachunk)
  ))
_sym_db.RegisterMessage(datachunk)


_SERVDESCRIBE_DEVSATTACHEDENTRY.has_options = True
_SERVDESCRIBE_DEVSATTACHEDENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class exptserveStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.InvokeCapability = channel.unary_unary(
          '/foxtrot.exptserve/InvokeCapability',
          request_serializer=capability_request.SerializeToString,
          response_deserializer=capability_response.FromString,
          )
      self.DescribeServer = channel.unary_unary(
          '/foxtrot.exptserve/DescribeServer',
          request_serializer=empty.SerializeToString,
          response_deserializer=servdescribe.FromString,
          )
      self.FetchData = channel.unary_stream(
          '/foxtrot.exptserve/FetchData',
          request_serializer=chunk_request.SerializeToString,
          response_deserializer=datachunk.FromString,
          )


  class exptserveServicer(object):

    def InvokeCapability(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DescribeServer(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FetchData(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_exptserveServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'InvokeCapability': grpc.unary_unary_rpc_method_handler(
            servicer.InvokeCapability,
            request_deserializer=capability_request.FromString,
            response_serializer=capability_response.SerializeToString,
        ),
        'DescribeServer': grpc.unary_unary_rpc_method_handler(
            servicer.DescribeServer,
            request_deserializer=empty.FromString,
            response_serializer=servdescribe.SerializeToString,
        ),
        'FetchData': grpc.unary_stream_rpc_method_handler(
            servicer.FetchData,
            request_deserializer=chunk_request.FromString,
            response_serializer=datachunk.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'foxtrot.exptserve', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaexptserveServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def InvokeCapability(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DescribeServer(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FetchData(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaexptserveStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def InvokeCapability(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    InvokeCapability.future = None
    def DescribeServer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    DescribeServer.future = None
    def FetchData(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()


  def beta_create_exptserve_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('foxtrot.exptserve', 'DescribeServer'): empty.FromString,
      ('foxtrot.exptserve', 'FetchData'): chunk_request.FromString,
      ('foxtrot.exptserve', 'InvokeCapability'): capability_request.FromString,
    }
    response_serializers = {
      ('foxtrot.exptserve', 'DescribeServer'): servdescribe.SerializeToString,
      ('foxtrot.exptserve', 'FetchData'): datachunk.SerializeToString,
      ('foxtrot.exptserve', 'InvokeCapability'): capability_response.SerializeToString,
    }
    method_implementations = {
      ('foxtrot.exptserve', 'DescribeServer'): face_utilities.unary_unary_inline(servicer.DescribeServer),
      ('foxtrot.exptserve', 'FetchData'): face_utilities.unary_stream_inline(servicer.FetchData),
      ('foxtrot.exptserve', 'InvokeCapability'): face_utilities.unary_unary_inline(servicer.InvokeCapability),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_exptserve_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('foxtrot.exptserve', 'DescribeServer'): empty.SerializeToString,
      ('foxtrot.exptserve', 'FetchData'): chunk_request.SerializeToString,
      ('foxtrot.exptserve', 'InvokeCapability'): capability_request.SerializeToString,
    }
    response_deserializers = {
      ('foxtrot.exptserve', 'DescribeServer'): servdescribe.FromString,
      ('foxtrot.exptserve', 'FetchData'): datachunk.FromString,
      ('foxtrot.exptserve', 'InvokeCapability'): capability_response.FromString,
    }
    cardinalities = {
      'DescribeServer': cardinality.Cardinality.UNARY_UNARY,
      'FetchData': cardinality.Cardinality.UNARY_STREAM,
      'InvokeCapability': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'foxtrot.exptserve', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
