# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ft_capability_pb2 as ft__capability__pb2
from . import ft_streams_pb2 as ft__streams__pb2
from . import ft_types_pb2 as ft__types__pb2


class streamsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateStreamThread = channel.unary_unary(
        '/foxtrot.streams/CreateStreamThread',
        request_serializer=ft__streams__pb2.stream_thread_request.SerializeToString,
        response_deserializer=ft__streams__pb2.stream_thread_response.FromString,
        )
    self.ListStreamThread = channel.unary_unary(
        '/foxtrot.streams/ListStreamThread',
        request_serializer=ft__types__pb2.empty.SerializeToString,
        response_deserializer=ft__streams__pb2.streamthreadlist.FromString,
        )
    self.DestroyStreamThread = channel.unary_unary(
        '/foxtrot.streams/DestroyStreamThread',
        request_serializer=ft__streams__pb2.stream_thread_request.SerializeToString,
        response_deserializer=ft__streams__pb2.stream_thread_response.FromString,
        )
    self.CreateStream = channel.unary_unary(
        '/foxtrot.streams/CreateStream',
        request_serializer=ft__streams__pb2.stream_registration_request.SerializeToString,
        response_deserializer=ft__streams__pb2.stream_registration_response.FromString,
        )
    self.ListStreams = channel.unary_unary(
        '/foxtrot.streams/ListStreams',
        request_serializer=ft__types__pb2.empty.SerializeToString,
        response_deserializer=ft__streams__pb2.streamlist.FromString,
        )
    self.ReceiveStream = channel.stream_stream(
        '/foxtrot.streams/ReceiveStream',
        request_serializer=ft__streams__pb2.stream_control.SerializeToString,
        response_deserializer=ft__capability__pb2.capability_response.FromString,
        )
    self.DestroyStream = channel.unary_unary(
        '/foxtrot.streams/DestroyStream',
        request_serializer=ft__streams__pb2.stream_registration_request.SerializeToString,
        response_deserializer=ft__streams__pb2.stream_registration_response.FromString,
        )


class streamsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateStreamThread(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStreamThread(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DestroyStreamThread(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListStreams(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ReceiveStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DestroyStream(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_streamsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateStreamThread': grpc.unary_unary_rpc_method_handler(
          servicer.CreateStreamThread,
          request_deserializer=ft__streams__pb2.stream_thread_request.FromString,
          response_serializer=ft__streams__pb2.stream_thread_response.SerializeToString,
      ),
      'ListStreamThread': grpc.unary_unary_rpc_method_handler(
          servicer.ListStreamThread,
          request_deserializer=ft__types__pb2.empty.FromString,
          response_serializer=ft__streams__pb2.streamthreadlist.SerializeToString,
      ),
      'DestroyStreamThread': grpc.unary_unary_rpc_method_handler(
          servicer.DestroyStreamThread,
          request_deserializer=ft__streams__pb2.stream_thread_request.FromString,
          response_serializer=ft__streams__pb2.stream_thread_response.SerializeToString,
      ),
      'CreateStream': grpc.unary_unary_rpc_method_handler(
          servicer.CreateStream,
          request_deserializer=ft__streams__pb2.stream_registration_request.FromString,
          response_serializer=ft__streams__pb2.stream_registration_response.SerializeToString,
      ),
      'ListStreams': grpc.unary_unary_rpc_method_handler(
          servicer.ListStreams,
          request_deserializer=ft__types__pb2.empty.FromString,
          response_serializer=ft__streams__pb2.streamlist.SerializeToString,
      ),
      'ReceiveStream': grpc.stream_stream_rpc_method_handler(
          servicer.ReceiveStream,
          request_deserializer=ft__streams__pb2.stream_control.FromString,
          response_serializer=ft__capability__pb2.capability_response.SerializeToString,
      ),
      'DestroyStream': grpc.unary_unary_rpc_method_handler(
          servicer.DestroyStream,
          request_deserializer=ft__streams__pb2.stream_registration_request.FromString,
          response_serializer=ft__streams__pb2.stream_registration_response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'foxtrot.streams', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
