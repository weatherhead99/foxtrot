# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ft_flags_pb2 as ft__flags__pb2
from . import ft_types_pb2 as ft__types__pb2


class flagsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetServerFlag = channel.unary_unary(
        '/foxtrot.flags/SetServerFlag',
        request_serializer=ft__flags__pb2.serverflag.SerializeToString,
        response_deserializer=ft__flags__pb2.serverflag.FromString,
        )
    self.GetServerFlag = channel.unary_unary(
        '/foxtrot.flags/GetServerFlag',
        request_serializer=ft__flags__pb2.serverflag.SerializeToString,
        response_deserializer=ft__flags__pb2.serverflag.FromString,
        )
    self.ListServerFlags = channel.unary_unary(
        '/foxtrot.flags/ListServerFlags',
        request_serializer=ft__types__pb2.empty.SerializeToString,
        response_deserializer=ft__flags__pb2.serverflaglist.FromString,
        )
    self.DropServerFlag = channel.unary_unary(
        '/foxtrot.flags/DropServerFlag',
        request_serializer=ft__flags__pb2.serverflag.SerializeToString,
        response_deserializer=ft__flags__pb2.serverflag.FromString,
        )


class flagsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetServerFlag(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServerFlag(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListServerFlags(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DropServerFlag(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_flagsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetServerFlag': grpc.unary_unary_rpc_method_handler(
          servicer.SetServerFlag,
          request_deserializer=ft__flags__pb2.serverflag.FromString,
          response_serializer=ft__flags__pb2.serverflag.SerializeToString,
      ),
      'GetServerFlag': grpc.unary_unary_rpc_method_handler(
          servicer.GetServerFlag,
          request_deserializer=ft__flags__pb2.serverflag.FromString,
          response_serializer=ft__flags__pb2.serverflag.SerializeToString,
      ),
      'ListServerFlags': grpc.unary_unary_rpc_method_handler(
          servicer.ListServerFlags,
          request_deserializer=ft__types__pb2.empty.FromString,
          response_serializer=ft__flags__pb2.serverflaglist.SerializeToString,
      ),
      'DropServerFlag': grpc.unary_unary_rpc_method_handler(
          servicer.DropServerFlag,
          request_deserializer=ft__flags__pb2.serverflag.FromString,
          response_serializer=ft__flags__pb2.serverflag.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'foxtrot.flags', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
