# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ft_capability_pb2 as ft__capability__pb2
from . import ft_types_pb2 as ft__types__pb2


class capabilityStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.InvokeCapability = channel.unary_unary(
        '/foxtrot.capability/InvokeCapability',
        request_serializer=ft__capability__pb2.capability_request.SerializeToString,
        response_deserializer=ft__capability__pb2.capability_response.FromString,
        )
    self.DescribeServer = channel.unary_unary(
        '/foxtrot.capability/DescribeServer',
        request_serializer=ft__types__pb2.empty.SerializeToString,
        response_deserializer=ft__capability__pb2.servdescribe.FromString,
        )
    self.FetchData = channel.unary_stream(
        '/foxtrot.capability/FetchData',
        request_serializer=ft__capability__pb2.chunk_request.SerializeToString,
        response_deserializer=ft__capability__pb2.datachunk.FromString,
        )


class capabilityServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def InvokeCapability(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DescribeServer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FetchData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_capabilityServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'InvokeCapability': grpc.unary_unary_rpc_method_handler(
          servicer.InvokeCapability,
          request_deserializer=ft__capability__pb2.capability_request.FromString,
          response_serializer=ft__capability__pb2.capability_response.SerializeToString,
      ),
      'DescribeServer': grpc.unary_unary_rpc_method_handler(
          servicer.DescribeServer,
          request_deserializer=ft__types__pb2.empty.FromString,
          response_serializer=ft__capability__pb2.servdescribe.SerializeToString,
      ),
      'FetchData': grpc.unary_stream_rpc_method_handler(
          servicer.FetchData,
          request_deserializer=ft__capability__pb2.chunk_request.FromString,
          response_serializer=ft__capability__pb2.datachunk.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'foxtrot.capability', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
