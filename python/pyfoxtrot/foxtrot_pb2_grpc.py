# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import foxtrot_pb2 as foxtrot__pb2
from . import ft_types_pb2 as ft__types__pb2


class exptserveStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BroadcastNotification = channel.unary_unary(
        '/foxtrot.exptserve/BroadcastNotification',
        request_serializer=foxtrot__pb2.broadcast_notification.SerializeToString,
        response_deserializer=foxtrot__pb2.broadcast_notification.FromString,
        )
    self.GetServerInfo = channel.unary_unary(
        '/foxtrot.exptserve/GetServerInfo',
        request_serializer=ft__types__pb2.empty.SerializeToString,
        response_deserializer=foxtrot__pb2.server_info.FromString,
        )


class exptserveServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def BroadcastNotification(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServerInfo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_exptserveServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BroadcastNotification': grpc.unary_unary_rpc_method_handler(
          servicer.BroadcastNotification,
          request_deserializer=foxtrot__pb2.broadcast_notification.FromString,
          response_serializer=foxtrot__pb2.broadcast_notification.SerializeToString,
      ),
      'GetServerInfo': grpc.unary_unary_rpc_method_handler(
          servicer.GetServerInfo,
          request_deserializer=ft__types__pb2.empty.FromString,
          response_serializer=foxtrot__pb2.server_info.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'foxtrot.exptserve', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
