# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import ft_sessions_pb2 as ft__sessions__pb2


class sessionsStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StartSession = channel.unary_unary(
        '/foxtrot.sessions/StartSession',
        request_serializer=ft__sessions__pb2.session_info.SerializeToString,
        response_deserializer=ft__sessions__pb2.session_info.FromString,
        )
    self.CloseSession = channel.unary_unary(
        '/foxtrot.sessions/CloseSession',
        request_serializer=ft__sessions__pb2.session_info.SerializeToString,
        response_deserializer=ft__sessions__pb2.session_info.FromString,
        )
    self.KeepAliveSession = channel.unary_unary(
        '/foxtrot.sessions/KeepAliveSession',
        request_serializer=ft__sessions__pb2.session_info.SerializeToString,
        response_deserializer=ft__sessions__pb2.session_info.FromString,
        )
    self.ListSessions = channel.unary_unary(
        '/foxtrot.sessions/ListSessions',
        request_serializer=ft__sessions__pb2.session_empty.SerializeToString,
        response_deserializer=ft__sessions__pb2.session_list.FromString,
        )


class sessionsServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StartSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CloseSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def KeepAliveSession(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListSessions(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_sessionsServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StartSession': grpc.unary_unary_rpc_method_handler(
          servicer.StartSession,
          request_deserializer=ft__sessions__pb2.session_info.FromString,
          response_serializer=ft__sessions__pb2.session_info.SerializeToString,
      ),
      'CloseSession': grpc.unary_unary_rpc_method_handler(
          servicer.CloseSession,
          request_deserializer=ft__sessions__pb2.session_info.FromString,
          response_serializer=ft__sessions__pb2.session_info.SerializeToString,
      ),
      'KeepAliveSession': grpc.unary_unary_rpc_method_handler(
          servicer.KeepAliveSession,
          request_deserializer=ft__sessions__pb2.session_info.FromString,
          response_serializer=ft__sessions__pb2.session_info.SerializeToString,
      ),
      'ListSessions': grpc.unary_unary_rpc_method_handler(
          servicer.ListSessions,
          request_deserializer=ft__sessions__pb2.session_empty.FromString,
          response_serializer=ft__sessions__pb2.session_list.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'foxtrot.sessions', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
