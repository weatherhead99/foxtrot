##Config file for generic foxtrot packages
##Templated for the @PACKNAME@ package


@PACKAGE_INIT@

include (CMakeFindDependencyMacro)

#If we're in the build tree, need a few different options
#Need this first block to setup any cmake scripts we've prepared,
#including custom find modules
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/@PACKNAME@exports.cmake)
  message(WARNING "foxtrot package: @PACKNAME@ is configuring from BUILD TREE! Make sure this is what you want!")
  set(@PACKNAME@_BUILD_TREE TRUE)

  #this one find auto-generated cmake find modules in build tree
  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
  if(EXISTS @SOURCEDIR_PATH@/cmake)
    message(STATUS "including cmake directory from source dir in module path...")	
    list(APPEND CMAKE_MODULE_PATH @SOURCEDIR_PATH@/cmake)
  endif()
else()
  set(@PACKNAME@_BUILD_TREE FALSE)
  message(STATUS "foxtrot package: @PACKNAME@ is configuring from install tree (normal behaviour)")
  list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")
  list(APPEND CMAKE_INCLUDE_PATH ${CMAKE_CURRENT_LIST_DIR})
endif()

#at this point, all the cmake setup should be done, and the injected dependencies script should
#have no issues

@DEPS_SCRIPT@


#now we've found our dependencies, should be free to actually load the targets

if(@PACKNAME@_BUILD_TREE)
  include(${CMAKE_CURRENT_LIST_DIR}/@PACKNAME@exports.cmake)
else()
  if(NOT TARGET foxtrot::@TARGETNAME@)
    include(${CMAKE_CURRENT_LIST_DIR}/@TARGETNAME@.cmake)
  else()
    message(STATUS  "targets were already declared, this configuration file did nothing")
  endif()  
endif()



check_required_components(@TARGETNAME@)
